name: Build & Commit Bank.db

on:
  workflow_dispatch: {}
  # push:
  #   branches: [ main ]

permissions:
  contents: write

jobs:
  build-db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Show Python version
        run: python -V

      - name: Create schema
        run: python createDB.py

      - name: Insert sample data
        run: python InsertData.py

      - name: Place DB at repo root
        run: |
          if [ -f "bank.db" ]; then
            mv -f bank.db Bank.db
          elif [ -f "db/Bank.db" ]; then
            mv -f db/Bank.db Bank.db
          elif [ -f "Bank.db" ]; then
            echo "Bank.db already at repo root."
          else
            echo "No DB file found after scripts ran!" && ls -la && exit 1
          fi

      - name: Export Bank.md (ER diagram + tables)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sqlite3

          cat > Bank.md <<'MD'
# Bank â€” Logical View

## ER Diagram
```mermaid
erDiagram
  Customers ||--o{ Accounts : has
  Accounts  ||--o{ Transactions : records

  Customers {
    INTEGER cust_id PK
    TEXT    name
    TEXT    address
    TEXT    email UNIQUE
  }

  Accounts {
    INTEGER acc_id PK
    INTEGER cust_id FK
    TEXT    acc_type
    REAL    balance
  }

  Transactions {
    INTEGER trans_id PK
    INTEGER acc_id  FK
    TEXT    trans_type
    REAL    amount
    TEXT    date
  }
```

## Tables
MD
          sed -i '/^MD$/d' Bank.md

          {
            echo ""
            echo "### Customers"
            sqlite3 -markdown Bank.db -cmd ".headers on" "SELECT * FROM Customers;"
          } >> Bank.md

          {
            echo ""
            echo "### Accounts (with owner)"
            sqlite3 -markdown Bank.db -cmd ".headers on"               "SELECT a.acc_id, c.name AS owner, a.acc_type, a.balance
               FROM Accounts a
               JOIN Customers c ON a.cust_id = c.cust_id
               ORDER BY a.acc_id;"
          } >> Bank.md

          {
            echo ""
            echo "### Transactions"
            sqlite3 -markdown Bank.db -cmd ".headers on"               "SELECT * FROM Transactions ORDER BY trans_id;"
          } >> Bank.md

      - name: Commit DB and report if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "$(git branch --show-current)" || true

          git add Bank.db Bank.md
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Build: update Bank.db and Bank.md (ER + tables) via GitHub Actions"
            git push origin "$(git branch --show-current)"
          fi
